name: OpenWrt Standard (Fixed)

on: 
  workflow_dispatch:
  schedule:
    - cron: "0 20 * * *"

env:
  REPO_URL: https://github.com/z901251/immortalwrt-rk356x
  REPO_BRANCH: main
  CONFIG_FILE: configs.config
  DIY_SCRIPT: diy.sh
  CLASH_KERNEL: arm64
  CACHE_TOOLCHAIN: true
  UPLOAD_BIN_DIR: false
  FIRMWARE_RELEASE: true
  FIRMWARE_TAG: immortalwrt-RK3568-NSY-G68
  TZ: Asia/Shanghai
  GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

jobs:
  Build:
    runs-on: ubuntu-22.04

    outputs:
      COMMIT_AUTHOR: ${{ steps.clone.outputs.COMMIT_AUTHOR }}
      COMMIT_DATE: ${{ steps.clone.outputs.COMMIT_DATE }}
      COMMIT_MESSAGE: ${{ steps.clone.outputs.COMMIT_MESSAGE }}
      COMMIT_HASH: ${{ steps.clone.outputs.COMMIT_HASH }}
      DEVICE_TARGET: ${{ steps.variable.outputs.DEVICE_TARGET }}
      DEVICE_SUBTARGET: ${{ steps.variable.outputs.DEVICE_SUBTARGET }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4  # 升级到最新版本

    - name: Check Server Performance
      run: |
        echo "注意：GitHub Actions服务器性能有限"
        echo "物理核心数: $(grep "cpu cores" /proc/cpuinfo | uniq | awk '{print $4}')"
        echo "逻辑核心数: $(nproc)"
        
    # 修复1: 使用新的磁盘清理工具
    - name: Release Space
      uses: marvinpinto/action-free-disk-space@v1.2.0
      with:
        free-up: 20  # 释放20GB空间
        additional-paths: |
          /usr/local/lib/android
          /usr/share/dotnet
          
    # 修复2: 简化环境初始化
    - name: Initialization Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y $(curl -fsSL https://git.io/JLZ6A) # OpenWrt专用依赖脚本
        sudo timedatectl set-timezone "$TZ"
        
    - name: Clone Source Code
      working-directory: /mnt/workdir
      id: clone
      run: |
        git clone "$REPO_URL" -b "$REPO_BRANCH" openwrt --depth=1
        echo "OPENWRT_PATH=${PWD}/openwrt" >> $GITHUB_ENV
        
    # 修复3: 添加路径安全校验
    - name: Validate Paths
      run: |
        if [ ! -f "$CONFIG_FILE" ]; then
          echo "错误: 缺少配置文件 $CONFIG_FILE" 1>&2
          exit 1
        fi
        
        if [ ! -f "$DIY_SCRIPT" ]; then
          echo "警告: 缺少DIY脚本 $DIY_SCRIPT"
        fi
        
    # 修复4: 修复文件移动逻辑
    - name: Load Custom Configuration
      run: |
        # 复制配置文件
        cp -f "${{ github.workspace }}/$CONFIG_FILE" "$OPENWRT_PATH/.config"
        
        # 仅当存在时才复制files目录
        if [ -d "${{ github.workspace }}/files" ]; then
          cp -r "${{ github.workspace }}/files" "$OPENWRT_PATH/"
        fi
        
        # 设置脚本权限
        find "${{ github.workspace }}/scripts" -type f -exec chmod +x {} \;
        
        # 执行DIY脚本（如果存在）
        if [ -f "${{ github.workspace }}/$DIY_SCRIPT" ]; then
          cd "${{ github.workspace }}"
          "./$DIY_SCRIPT"
        fi
        
        # 返回编译目录
        cd "$OPENWRT_PATH"
        
    # 修复5: 添加工具链缓存修复
    - name: Cache Toolchain
      if: env.CACHE_TOOLCHAIN == 'true'
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-openwrt-toolchain-${{ env.REPO_BRANCH }}
        path: |
          ${{ env.OPENWRT_PATH }}/dl
          ${{ env.OPENWRT_PATH }}/build_dir/host
          
    # 修复6: 编译优化
    - name: Compile Firmware
      id: compile
      run: |
        cd "$OPENWRT_PATH"
        make download -j$(nproc) # 并行下载
        
        # 三级编译回退
        make -j$(nproc) V=sc || make -j2 V=s || make -j1 V=s
        
        echo "status=success" >> $GITHUB_OUTPUT
        
    # 修复7: 升级上传组件
    - name: Upload Bin Directory
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      uses: actions/upload-artifact@v4  # 使用最新版本
      with:
        name: immortalwrt-build-${{ env.FILE_DATE }}
        path: ${{ env.OPENWRT_PATH }}/bin
        retention-days: 7
        
    # 修复8: 统一上传机制
    - name: Upload Firmware To Release
      if: steps.compile.outputs.status == 'success' && env.FIRMWARE_RELEASE == 'true'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.FIRMWARE_TAG }}-${{ github.run_id }}
        files: ${{ env.OPENWRT_PATH }}/bin/targets/*/*
        draft: false
        prerelease: false
